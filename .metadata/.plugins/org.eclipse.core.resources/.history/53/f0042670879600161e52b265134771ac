package com.customannotation;

import java.lang.reflect.Field;
import java.lang.reflect.Method;
import java.text.Annotation;

public class CustomAnnotation {

	String name;
	int age;
	
	public static void main(String[] args) throws ClassNotFoundException {
		// TODO Auto-generated method stub
		
		CustomAnnotation ca = new CustomAnnotation();
//		Method m = ca.getClass( ).getMethod("myMethod");
//	      java.lang.annotation.Annotation[] annos = m.getAnnotations();

		
		
//		Class c = Class.forName("com.customannotation.Demo");
//		Class c1 = Class.forName("com.customannotation.Demo");
//
//		Method [] m = c.getDeclaredMethods();
//		Field [] f = c.getDeclaredFields();
//		for(int i=0 ; i<m.length;i++){
//			Method temp = m[i];	
//			System.out.println(temp);
//			
//			if(temp.isAnnotationPresent(c)){
//				System.out.println("true");
//
//			}
//
//			if(temp.toString().contains("name"))
//				System.out.println("found");
//		}
		
		
		Demo d = new Demo();
		Method [] m = d.getClass().getMethods();
		Field [] f = d.getClass().getDeclaredFields();
		int i=0;
		
		 for(Field field : f)
      	   System.out.println(field);
		
		for (Method method : m) {	
    		
            Getter annos = method.getAnnotation(Getter.class);
          
            if (annos != null){
        		//System.out.println(f[j].toString());

            	//if(m[i].getName().contains(f[j].toString()))
            		System.out.println(m[i].getName() + "  is annotated");
            	
//            	if(m[i].getName().contains("int"))
//            		System.out.println(m[i].getName() + "  is annotated");
            	}
          
            
            
            i++;
		}

	}	
}


class Demo{
	int age;
	String name;
	
	
	
	@Getter (name = "ABC")
	public String getname(){
		return "";
	}
	
	@Getter (name = "ABC")
	public  void getint(){
		
	}
	
	public  void getval(){
		
	}
}
