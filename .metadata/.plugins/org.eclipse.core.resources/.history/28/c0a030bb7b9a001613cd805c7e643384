package com.ballgame;

import java.awt.Color;
import java.awt.Frame;
import java.awt.Graphics;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.tools.ToolProvider;

public class BallGame extends Frame implements Runnable {

    Thread t1, t2, t3;
    int y1 = 400, y2 = 400, y3 = 400;
   // boolean blueTop = false;
	 boolean greenTop = false;
	  boolean blueTop = false;
		boolean redTop = false;


    public BallGame() {

        super("Ball game");
        setBackground(Color.CYAN);
        setSize(500, 500);
        setVisible(true);

        t1 = new Thread(this);
        t2 = new Thread(this);
        t3 = new Thread(this);

        t1.setName("red");
        t2.setName("green");
        t3.setName("blue");

        t1.start();
        t2.start();
        t3.start();

        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                System.exit(0);
            }
        });
    }

    @Override
    public void paint(Graphics g) {

        g.setColor(Color.RED);
        g.fillOval(100, y1, 50, 50);
        g.setColor(Color.GREEN);
        g.fillOval(200, y2, 50, 50);
        g.setColor(Color.BLUE);
        g.fillOval(300, y3, 50, 50);
    }

    @Override
    public void run() {

        Thread currentThread = Thread.currentThread();
        if (currentThread.getName().equals("red")) {
        	redBall();
           
        } else if (currentThread.getName().equals("green")) {
        	greenBall();
           
        } else if (currentThread.getName().equals("blue")) {
          blueBall();
        }
    }

    
public   void blueBall(){
      for (;;) {
          if (check(blueTop )) {
              y3++;
              if (y3 == 400) {
            	  blueTop = false;
              }
          } else {
              y3--;
              if (y3 < 50) {
            	  blueTop = true;
                 try {
					//wait();
                	// notifyAll();
                	 
//					redTop = false;
//					greenTop = false;
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
                  //blueTop = true;                    }
          }
          repaint();
          try {
              Thread.sleep(30);
          } catch (InterruptedException e) {
              // TODO Auto-generated catch block
              e.printStackTrace();
          }
      }
      }
		
	}

public   void redBall(){
    for (;;) {
        if (check(redTop)) {
            y1++;
            if (y1 == 400) {
            	redTop = false;
                
            }
        } 
        
        else {
            y1--;
           
            if (y1 < 50) {
            	redTop = true;
           		try {
    				//	wait();
    				} catch (Exception e) {
    					// TODO Auto-generated catch block
    					e.printStackTrace();
    				}
            	}
                
            
        }
        repaint();
        try {
            Thread.sleep(20);
        } catch (InterruptedException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
	
}

public   void greenBall(){
     for (;;) {
         if (check(greenTop)) {
             y2++;
             if (y2 == 400) {
            	 greenTop = false;
             }
         } else {
             y2--;
             if (y2 < 50) {
            	 greenTop = true;
                 try {
					//wait();
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
             }
         }
         repaint();
         try {
             Thread.sleep(25);
         } catch (InterruptedException e) {
             // TODO Auto-generated catch block
             e.printStackTrace();
         }
     }
	
}

synchronized boolean check(boolean topValue){
	if(topValue == true)
		try {
			wait() ;
		} catch (InterruptedException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	return false;
}
    
    
    
    public static void main(String[] args) {

        Frame mf = new BallGame();
        mf.setSize(500, 500);
        mf.setVisible(true);
    }

}