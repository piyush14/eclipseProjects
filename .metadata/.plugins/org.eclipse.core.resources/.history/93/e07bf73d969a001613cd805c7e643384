package pingpongCallable;

import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

public class PingPong {
	public static void main(String [] args) throws InterruptedException, ExecutionException{
		ExecutorService executor = Executors.newFixedThreadPool(3);
		
		Callable<Integer> c1 = new Callable<Integer>(){
					@Override
					public Integer call() throws Exception {
					System.out.println("PING");
					return 1;
				}
			};
			
		Callable<Integer> c2 = new Callable<Integer>(){
			@Override
			public Integer call()throws Exception{
				System.out.println("\tPONG");
				return 1;
			}
		};
		
		
		Future<Integer> future1 = executor.submit(c1);
		Future<Integer> future2 = executor.submit(c1);

		int result1 = future1.get();
		int result2 = future2.get();
		
		
	}
}
